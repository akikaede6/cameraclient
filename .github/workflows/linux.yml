name: C/C++ AppImage
on:
  push:
    paths:
      - 'CMakeLists.txt'
      - 'src/**'
      - 'ci/**'
      - '.github/workflows/linux.yml'
  pull_request:
    paths:
      - 'CMakeLists.txt'
      - 'src/**'
      - 'ci/**'
      - '.github/workflows/linux.yml'


jobs:
  build-appimage:

    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2
      - name: install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y qt5-default qtdeclarative5-dev cmake qtmultimedia5-dev
      - name: install Fast-DDS
        run: |
          sudo apt install g++ python3-pip wget git libasio-dev libtinyxml2-dev

          mkdir ~/Fast-DDS
          cd ~/Fast-DDS
          git clone https://github.com/eProsima/foonathan_memory_vendor.git
          mkdir foonathan_memory_vendor/build
          cd foonathan_memory_vendor/build
          cmake .. -DBUILD_SHARED_LIBS=ON
          sudo cmake --build . --target install -j9

          cd ~/Fast-DDS
          git clone https://github.com/eProsima/Fast-CDR.git
          mkdir Fast-CDR/build
          cd Fast-CDR/build
          cmake ..
          sudo cmake --build . --target install -j9

          cd ~/Fast-DDS
          git clone https://github.com/eProsima/Fast-DDS.git
          mkdir Fast-DDS/build
          cd Fast-DDS/build
          cmake ..
          sudo cmake --build . --target install -j9
      - name: configure
        run: cmake -H. build -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr
      - name: build
        run: cmake --build build
      - name: install
        run: |
          cd build
          make install DESTDIR=../AppDir
          cd ../
      - name: Build AppImage
        run: |
          wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
          chmod a+x linuxdeployqt-continuous-x86_64.AppImage
          ./linuxdeployqt-continuous-x86_64.AppImage AppDir/usr/share/applications/*.desktop -appimage
          mv CameraClient*.AppImage CameraClient-x86_64.AppImage
      - uses: actions/upload-artifact@v2
        with:
          name: CameraClient-${{ github.run_id }}-linux
          path: CameraClient*.AppImage
      # tag 上传Release
      - name: uploadRelease
        if: startsWith(github.event.ref, 'refs/tags/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: CameraClient-x86_64.AppImage
          asset_name: CameraClient-${{ github.ref_name }}-linux.AppImage
          tag: ${{ github.ref }}
          overwrite: true
